openapi: 3.0.1
info:
  title: Repository API
  version: '2021-07-11T00:11:22Z'
servers:
  - url: 'https://api.opalpolicy.com/{basePath}'
    variables:
      basePath:
        default: /repository
paths:
  '/v1/bundles/{item}/contents/{content}':
    post:
      tags:
        - Bundle Content
      summary: Post content
      description: Post bundle content item
      parameters:
        - name: content
          in: path
          required: true
          schema:
            type: string
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - repository_jwt_authorizer: []
    delete:
      tags:
        - Bundle Content
      summary: Delete content
      description: Delete bundle content item
      parameters:
        - name: content
          in: path
          required: true
          schema:
            type: string
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - repository_jwt_authorizer: []
  /v1/bundles:
    get:
      tags:
        - Bundles
      summary: List Bundles
      description: Lists all available bundles.
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            Timestamp:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundlesList'
        '400':
          description: 400 response
          content: {}
        '500':
          description: 500 response
          content: {}
      security:
        - repository_jwt_authorizer: []
  /status:
    post:
      tags:
        - Status
      summary: Post status
      description: Post status.
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - repository_jwt_authorizer: []
  '/v1/bundles/{item}':
    get:
      tags:
        - Bundles
      summary: Get Bundle
      description: Get bundle item.
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Content-Encoding:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            Timestamp:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
          content: {}
      security:
        - repository_jwt_authorizer: []
    put:
      tags:
        - Bundles
      summary: Add bundle
      description: Put bundle item.
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Content-Encoding:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            Timestamp:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - repository_jwt_authorizer: []
    delete:
      tags:
        - Bundles
      summary: Delete bundle item
      description: Delete bundle item.
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Content-Encoding:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            Timestamp:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - repository_jwt_authorizer: []
  /v1/policies:
    get:
      tags:
        - Policies
      summary: List Policies
      description: Lists all available policies.
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            Timestamp:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
        '400':
          description: 400 response
          content: {}
        '500':
          description: 500 response
          content: {}
      security:
        - repository_jwt_authorizer: []
  '/v1/bundles/{item}/contents':
    get:
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            Timestamp:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
          content: {}
      security:
        - repository_jwt_authorizer: []
  '/v1/policies/{item}':
    get:
      tags:
        - Policies
      summary: Get Policy
      description: Get policy item.
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Content-Encoding:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            Timestamp:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - repository_jwt_authorizer: []
    put:
      tags:
        - Policies
      summary: Add policy
      description: Put policy item.
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Content-Encoding:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            Timestamp:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - repository_jwt_authorizer: []
    delete:
      tags:
        - Policies
      summary: Delete policy
      description: Delete policy.
      parameters:
        - name: item
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Content-Encoding:
              schema:
                type: string
            Content-Length:
              schema:
                type: string
            Timestamp:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - repository_jwt_authorizer: []
components:
  schemas:
    Empty:
      title: Empty Schema
      type: object
    BundlesList:
      title: repository-bundle listing schema
      type: array
      description: repository-bundle listing schema.
      items:
        title: BundleItem
        required:
          - etag
          - lastModified
          - name
          - size
        type: object
        properties:
          name:
            title: name
            type: string
            description: bundle name.
            default: ''
          lastModified:
            title: lastModified
            type: string
            description: bundle lastModified date.
            default: ''
          etag:
            title: etag
            type: string
            description: bundle file etag.
            default: ''
          size:
            title: size
            type: integer
            description: bundle file size of bytes.
            default: 0
        additionalProperties: true
        description: bundle item.
        default: {}
      default: []
  securitySchemes:
    repository_jwt_authorizer:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        authorizerUri: >-
          arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-2:377258293252:function:jwt-authorizer/invocations
        authorizerCredentials: 'arn:aws:iam::377258293252:role/api_gateway_auth_invocation'
        authorizerResultTtlInSeconds: 0
        identitySource: method.request.header.Authorization
        type: request
